	AREA Reset,DATA, READONLY
	EXPORT __Vectors
__Vectors
	DCD 0x10001000
	DCD Reset_Handler
	ALIGN
	AREA mycode,CODE,READONLY
	ENTRY
	EXPORT Reset_Handler
Reset_Handler
	LDR R0,=ARR1
	LDR R1,=ARR2
	LDR R10,=SIZE
	LDR R2,[R10] ;DIMENSIONS
	LDR R3,=DEST
	MOV R11,#4
	MOV R4,#0 ;CURRENT COUNT OF ARRAY COVERED (1,2,3)
	MOV R5,#0 ;SUM
	MUL R7,R2,R11 ;NUMBER OF SPACES TO MOVE AHEAD IN EACH LOOP IN LOOP2
	MOV R12,#0
;ROW SUM OF ARRAY 1
LOOP1 CMP R4,R2 ;CHECKS HOW MANY ELEMENTS HAVE BEEN ADDED => N AT A TIME
	BEQ RESETCOUNT1 ;IF N ELEMENTS ADDED GO TO NEXT LOOP
	LDR R6,[R0],#4 ;LOADS THE CURRENT VALUE AND INCREMENTS TO NEXT VALUE FROM ARRAY1
	ADD R5,R5,R6 ; ADD VALUE OBTAINED TO SUM
	ADD R4,R4,#1 ; INCREMENT COUNT
	B LOOP1
	
RESETCOUNT1 
	MOV R4,#0 ;RESET COUNT FOR NEXT LOOP TO COUNT SAME NUMBER OF ELEMENTS
	B LOOP2

LOOP2 CMP R4,R2 ;COMPARE R4 TO R2 SO WHEN COMPARED WE GET EXACTLY N ELEMENTS
	BEQ RESETCOUNT2 ;iF N ELEMENTS ADDED MOVE TO NEXT LOOP
	LDR R6,[R1,R12] ; OBTAIN ELEMENT FROM ARRAY2+i WHERE i<N THEN POST INCREMENT IT BY N PLACES
	ADD R1,R1,R7
	ADD R5,R5,R6 ;ADD THE SUM TO CURRENT SUM
	ADD R4,R4,#1 ; KEEP COUNT OF NUMBER OF ELEMENTS ADDED
	B LOOP2

RESETCOUNT2
	;array 1 need not be restored
	LDR R1,=ARR2 ;reset array 2 to original position
	MOV R4,#0 ;RESET COUNT AS BEFORE
	STR R5,[R3],#4 ;TORE THE SUM
	MOV R5,#0;RESET SUM
	ADD R12,R12,#4 ;INCREMENT NUMBER OF ROWS COVERED SHOULD BE < N
	CMP R12,R7 ;COMPARE WITH NUMBER OF ROWS 
	BLT LOOP1
STOP B STOP
ARR1 DCD 1,2,3,4,5,6,7,8,9
ARR2 DCD 1,2,3,4,5,6,7,8,9
SIZE DCD 3
	AREA data,DATA, READWRITE
DEST DCD 0
	END
